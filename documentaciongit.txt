git branch --delete rhei_reporte # delete a branch local
git reset --hard # delete all changes local and pull on the last head
git clean --force -X # remove all files ignored by the file .gitignore
git ls-files #files that are currently tracked in git
git ls-files --others (or -o) #show untracked files
git reset --hard # You’ve reset the Git working directory to the last committed state.

#put files to igonre
#Change to the directory containing your repository: for example,
#cd /Users/mike/GitInPracticeRedux/.
#2 Run echo \*.tmp > .gitignore. This creates a new file named .gitignore with
#the contents “*.tmp”.
#3 Run git add .gitignore to add .gitignore to the index staging area for the next
#commit. There will be no output.
#4 Run git commit --message='Ignore .tmp files.'. The output should resemble the following.

git push --delete origin chapter-two  #Para borra un branch

git reset --hard  # Devolvemos al ultimo  commit

git ls-files    # Va a listar todos los archivos que tienen historia o estan tracked

git ls-files --others  # Mostrara os archivos que no han sido track

git clean --force #Borrar todos los archivos que no tienen  ningun commit.

git stash save # Guarda los cambios qeno estn en commit temporalmene en una pila y deshace los cambios actuales..

git diff stash@{0} #muestra lo qu esta almacendao temporalmente el tope de la pila

git diff stash@{1} #muestra lo qu esta almacendao temporalmente una unidad despues del tope de la pila

git stash pop # saca de la pila para el directorio de trabajo
 
git stash clear ## Borra tda la pila que esta en el temporal

git update-index --assume-unchanged 01-IntroducingGitInPractice.asciidoc # Coloca los archivos manuealmente que uno NO los quiere      #ca,biar                      .. , si los separa por coma, seran varios archivos que uno no quiere cambiar

git ls-files -v  #Lista los archivos que llevan trazas Historicas con (H)Mayusculas y los que no se llevara control de versiones llevara h (h) minuscula

 
 git merge simon #Hace un merge de simon a  master
 
 #resolver conflicto, editamos el conflicto resolvemos y depues 
 git add .
 git commit -m "fix"
 git pull
 git merge  commit # run  after fix conflict
 
 
 
 
 
 
